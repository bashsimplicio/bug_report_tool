# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-05-15 11:39
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AssignedTo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dev_notes', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='BugClassification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bug_severity', models.CharField(choices=[('Blocker', 'Blocker'), ('Critical', 'Critical'), ('Major', 'Major'), ('Minor', 'Minor'), ('Trivial', 'Trivial'), ('Enhancement', 'Enhancement')], default='Critical', max_length=20)),
                ('bug_priority', models.CharField(choices=[('Critical', 'Critical'), ('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], default='Critical', max_length=20)),
                ('status', models.CharField(choices=[('Critical', 'Critical'), ('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], default='For Testing', max_length=50)),
                ('device', models.CharField(choices=[('android', 'Android'), ('ios', 'iOS'), ('na', 'Not Applicable')], default='na', max_length=10)),
                ('browser', models.CharField(choices=[('firefox', 'Firefox'), ('chrome', 'Chrome'), ('others', 'Others'), ('na', 'Not Applicable')], default='na', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='BugDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('bug_description', models.TextField(blank=True)),
                ('steps_to_replicate', models.TextField(blank=True)),
                ('actual_output', models.TextField(blank=True)),
                ('expected_output', models.TextField(blank=True)),
                ('date_reported', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BugReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_of_issues', models.IntegerField()),
                ('num_of_fixed', models.IntegerField()),
                ('num_for_testing', models.IntegerField()),
                ('num_of_unresolved', models.IntegerField()),
                ('bug', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bug_report.BugDetail')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=100)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('staging_site', models.CharField(blank=True, max_length=100, null=True)),
                ('production_site', models.CharField(blank=True, max_length=100, null=True)),
                ('type_of_project', models.CharField(choices=[('Kanban', 'Kanban'), ('Scrum', 'Scrum')], default='Scrum', max_length=10)),
                ('tester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReportedBy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tester_note', models.TextField(blank=True)),
                ('bug', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bug_report.BugDetail')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tester', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='bugreport',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bug_report.Project'),
        ),
        migrations.AddField(
            model_name='bugdetail',
            name='project_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project', to='bug_report.Project'),
        ),
        migrations.AddField(
            model_name='bugclassification',
            name='bug',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bug_report.BugDetail'),
        ),
        migrations.AddField(
            model_name='assignedto',
            name='bug',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bug_report.BugDetail'),
        ),
        migrations.AddField(
            model_name='assignedto',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='developer', to=settings.AUTH_USER_MODEL),
        ),
    ]
